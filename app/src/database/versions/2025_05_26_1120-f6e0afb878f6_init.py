"""Init

Revision ID: f6e0afb878f6
Revises:
Create Date: 2025-05-26 11:20:25.320051

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = 'f6e0afb878f6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'table_image',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='ID'),
        sa.Column('id_telegram', sa.String(length=128), nullable=False, comment='id в Telegram'),
        sa.Column('local_path', sa.String(length=128), nullable=False, comment='путь'),
        sa.Column('name', sa.String(length=48), nullable=False, comment='название'),
        sa.Column('order', sa.Integer(), nullable=False, comment='порядковый номер'),
        sa.Column('category', sa.Integer(), nullable=False, comment='категория'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id_telegram'),
        sa.UniqueConstraint('local_path'),
        sa.UniqueConstraint('name'),
        comment='Изображение',
    )
    op.create_table(
        'table_user',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='ID'),
        sa.Column('datetime_start', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False, comment='дата и время старта бота'),
        sa.Column('datetime_stop', sa.DateTime(timezone=True), server_default=sa.text('NULL'), nullable=True, comment='дата и время остановки бота'),
        sa.Column('id_telegram', sa.String(length=17), nullable=False, comment='id в Telegram'),
        sa.Column('message_main_last_id', sa.Integer(), server_default=sa.text('NULL'), nullable=True, comment='id последнего сообщения "Главная"'),
        sa.Column('name_first', sa.String(length=64), server_default=sa.text('NULL'), nullable=True, comment='имя'),
        sa.Column('name_last', sa.String(length=64), server_default=sa.text('NULL'), nullable=True, comment='фамилия'),
        sa.Column('username', sa.String(length=32), server_default=sa.text('NULL'), nullable=True, comment='username в Telegram'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('id_telegram'),
        comment='Пользователь',
    )
    op.create_table(
        'table_user_achievement',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='ID'),
        sa.Column('nightmare', sa.Integer(), server_default='0', nullable=False, comment='👺 Cущий кошмар: не отгадал(а) ни одного слова за спящего'),
        sa.Column('dream_master', sa.Integer(), server_default='0', nullable=False, comment='😻 Cон на яву: отгадал(а) все слова за спящего'),
        sa.Column('top_guesser', sa.Integer(), server_default='0', nullable=False, comment='🕵️\u200d♀️ Яркие сны: угадал(а) больше всего слов за спящего'),
        sa.Column('top_buka', sa.Integer(), server_default='0', nullable=False, comment='🗿 Бу-бу-бука: получил(а) больше всего очков за буку'),
        sa.Column('top_fairy', sa.Integer(), server_default='0', nullable=False, comment='🧚\u200d♀️ Крестная фея: получил(а) больше всего очков за фею'),
        sa.Column('top_sandman', sa.Integer(), server_default='0', nullable=False, comment='🎭 Лицемерище: получил(а) больше всего очков за песочного человечка'),
        sa.Column('top_score', sa.Integer(), server_default='0', nullable=False, comment='🥇 Высший разум: получил(а) больше всего очков'),
        sa.Column('penalty_master', sa.Integer(), server_default='0', nullable=False, comment='🌚 Кайфоломщик: получил(а) больше всего пенальти'),
        sa.Column('user_id', sa.Integer(), nullable=False, comment='ID пользователя'),
        sa.ForeignKeyConstraint(['user_id'], ['table_user.id'], name='table_user_achievement_table_user_fkey', ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id'),
        comment='Достижения пользователей',
    )
    op.create_table(
        'table_user_statistic',
        sa.Column('id', sa.Integer(), autoincrement=True, nullable=False, comment='ID'),
        sa.Column('total_score', sa.Integer(), server_default='0', nullable=False, comment='Общее количество очков'),
        sa.Column('total_score_buka', sa.Integer(), server_default='0', nullable=False, comment='Количество очков за буку'),
        sa.Column('total_score_fairy', sa.Integer(), server_default='0', nullable=False, comment='Количество очков за фею'),
        sa.Column('total_score_sandman', sa.Integer(), server_default='0', nullable=False, comment='Количество очков за песочного человека'),
        sa.Column('total_wins', sa.Integer(), server_default='0', nullable=False, comment='Общее количество побед'),
        sa.Column('total_quits', sa.Integer(), server_default='0', nullable=False, comment='Общее количество выходов из игры'),
        sa.Column('last_game_date', sa.DateTime(timezone=True), server_default=sa.text('NULL'), nullable=True, comment='Последняя игра'),
        sa.Column('user_id', sa.Integer(), nullable=False, comment='ID пользователя'),
        sa.ForeignKeyConstraint(['user_id'], ['table_user.id'], name='table_user_statistic_table_user_fkey', ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id'),
        comment='Статистика пользователей',
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('table_user_statistic')
    op.drop_table('table_user_achievement')
    op.drop_table('table_user')
    op.drop_table('table_image')
    # ### end Alembic commands ###
